name: Release ARM Template

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Only trigger on tags with format like 1.2.3
      - 'v[0-9]+.[0-9]+.[0-9]+'  # Also support tags with v prefix like v1.2.3

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for gh-pages
      
      - name: Extract version from tag
        id: get_version
        run: |
          # Remove 'v' prefix if present
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Install Bicep CLI
        run: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep
          bicep --version

      - name: Build Bicep to ARM Template
        run: |
          echo "Building ARM template for release..."
          bicep build main.bicep
          
          if [ ! -f "main.json" ]; then
            echo "‚ùå Failed to generate main.json"
            exit 1
          fi
          
          echo "‚úÖ Successfully generated main.json"
          echo "File size: $(ls -lh main.json | awk '{print $5}')"

      - name: Deploy to GitHub Pages
        run: |
          # Configure git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
          # Store current branch
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          
          # Try to checkout gh-pages, create if it doesn't exist
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf . || true
          fi
          
          # Create directory structure
          mkdir -p latest
          mkdir -p "v${{ steps.get_version.outputs.VERSION }}"
          
          # Copy main.json to appropriate locations
          cp "$GITHUB_WORKSPACE/main.json" latest/
          cp "$GITHUB_WORKSPACE/main.json" "v${{ steps.get_version.outputs.VERSION }}/"
          
          # Create an index.html with deployment instructions
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>UniFi on Azure - ARM Templates</title>
              <meta charset="utf-8">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif; margin: 40px; line-height: 1.6; color: #333; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .header { border-bottom: 2px solid #0078d4; padding-bottom: 20px; margin-bottom: 30px; }
                  h1 { color: #0078d4; margin-bottom: 10px; }
                  .deploy-button { margin: 30px 0; text-align: center; }
                  .deploy-section { background: #f6f8fa; padding: 30px; border-radius: 8px; margin: 20px 0; }
                  code { background: #f6f8fa; padding: 2px 6px; border-radius: 3px; font-family: Consolas, Monaco, monospace; }
                  pre { background: #f6f8fa; padding: 16px; border-radius: 6px; overflow-x: auto; }
                  .version-list { list-style: none; padding: 0; }
                  .version-list li { padding: 8px 0; }
                  .version-list a { color: #0078d4; text-decoration: none; }
                  .version-list a:hover { text-decoration: underline; }
                  .resources { background: #e7f3ff; padding: 20px; border-radius: 8px; margin: 20px 0; }
                  .footer { margin-top: 50px; padding-top: 20px; border-top: 1px solid #ddd; text-align: center; color: #666; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>UniFi Controller on Azure</h1>
                      <p>Deploy UniFi Controller to Azure Container Instances with one click</p>
                  </div>
                  
                  <div class="deploy-section">
                      <h2>üöÄ Quick Deploy</h2>
                      <div class="deploy-button">
                          <a href="https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Faadversteeg.github.io%2Fdeploy-to-azure%2Flatest%2Fmain.json">
                              <img src="https://aka.ms/deploytoazurebutton" alt="Deploy to Azure">
                          </a>
                      </div>
                      <p style="text-align: center;"><em>Always deploys the latest stable version</em></p>
                  </div>
                  
                  <div class="resources">
                      <h3>üì¶ What Gets Deployed</h3>
                      <ul>
                          <li>Azure Container Instance running UniFi Controller v8.1</li>
                          <li>Azure Storage Account with File Share for persistent configuration</li>
                          <li>Public IP address with DNS name</li>
                          <li>HTTPS (8443) and HTTP (8080) endpoints</li>
                      </ul>
                  </div>
                  
                  <h2>üõ†Ô∏è Deployment Options</h2>
                  
                  <h3>Azure CLI</h3>
                  <pre><code>az deployment group create \
    --resource-group &lt;your-rg&gt; \
    --template-uri https://aadversteeg.github.io/deploy-to-azure/latest/main.json \
    --parameters location=&lt;your-location&gt;</code></pre>
                  
                  <h3>PowerShell</h3>
                  <pre><code>New-AzResourceGroupDeployment `
    -ResourceGroupName &lt;your-rg&gt; `
    -TemplateUri "https://aadversteeg.github.io/deploy-to-azure/latest/main.json" `
    -location &lt;your-location&gt;</code></pre>
                  
                  <h2>üìã Available Versions</h2>
                  <ul class="version-list">
                      <li>üìå <a href="/deploy-to-azure/latest/main.json">Latest</a> - Always points to the most recent release</li>
                      <li>üè∑Ô∏è <a href="/deploy-to-azure/v${{ steps.get_version.outputs.VERSION }}/main.json">v${{ steps.get_version.outputs.VERSION }}</a> - Current release</li>
                  </ul>
                  
                  <h2>üîß Parameters</h2>
                  <table style="width: 100%; border-collapse: collapse;">
                      <tr style="background: #f6f8fa;">
                          <th style="padding: 10px; text-align: left; border: 1px solid #ddd;">Parameter</th>
                          <th style="padding: 10px; text-align: left; border: 1px solid #ddd;">Default</th>
                          <th style="padding: 10px; text-align: left; border: 1px solid #ddd;">Description</th>
                      </tr>
                      <tr>
                          <td style="padding: 10px; border: 1px solid #ddd;"><code>location</code></td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Resource group location</td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Azure region for deployment</td>
                      </tr>
                      <tr>
                          <td style="padding: 10px; border: 1px solid #ddd;"><code>containerGroupName</code></td>
                          <td style="padding: 10px; border: 1px solid #ddd;">unifi-controller</td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Name for the container group</td>
                      </tr>
                      <tr>
                          <td style="padding: 10px; border: 1px solid #ddd;"><code>storageAccountName</code></td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Auto-generated</td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Storage account name</td>
                      </tr>
                      <tr>
                          <td style="padding: 10px; border: 1px solid #ddd;"><code>timeZone</code></td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Europe/Amsterdam</td>
                          <td style="padding: 10px; border: 1px solid #ddd;">Container timezone</td>
                      </tr>
                  </table>
                  
                  <div class="footer">
                      <p>View the source on <a href="https://github.com/aadversteeg/deploy-to-azure">GitHub</a></p>
                  </div>
              </div>
          </body>
          </html>
          EOF
          
          # Add all files
          git add .
          
          # Commit changes
          git commit -m "Deploy ARM template v${{ steps.get_version.outputs.VERSION }}" || echo "No changes to commit"
          
          # Push to gh-pages
          git push origin gh-pages --force
          
          # Return to previous branch/tag
          git checkout "$CURRENT_BRANCH"

      - name: Create deployment package
        run: |
          # Create a directory for release artifacts
          mkdir -p release-artifacts
          
          # Copy main files
          cp main.json release-artifacts/
          cp main.bicep release-artifacts/
          cp main.parameters.json release-artifacts/
          
          # Create a deployment guide
          cat > release-artifacts/DEPLOYMENT_GUIDE.md << EOF
          # UniFi Controller on Azure - Deployment Guide
          
          ## Version: ${{ steps.get_version.outputs.VERSION }}
          
          ### Quick Deploy
          
          Use the Deploy to Azure button on our [deployment page](https://aadversteeg.github.io/deploy-to-azure/)
          
          Or use Azure CLI/PowerShell:
          
          \`\`\`bash
          az deployment group create \\
            --resource-group <your-rg> \\
            --template-uri https://aadversteeg.github.io/deploy-to-azure/latest/main.json \\
            --parameters location=<your-location>
          \`\`\`
          
          ### Manual Deployment
          
          1. Download the \`main.json\` ARM template from this release
          2. Open Azure Portal
          3. Search for "Deploy a custom template"
          4. Select "Build your own template in the editor"
          5. Load the \`main.json\` file
          6. Fill in the required parameters
          7. Review and create
          
          ### Parameters
          
          - **location**: Azure region for deployment (e.g., 'eastus', 'westeurope')
          - **containerGroupName**: Name for the container group (default: 'unifi-controller')
          - **storageAccountName**: Name for the storage account (auto-generated if not specified)
          - **fileShareName**: Name for the file share (default: 'unifi-controller')
          - **timeZone**: Container timezone (default: 'Europe/Amsterdam')
          - **fileShareSizeGB**: File share size in GB (default: 5)
          - **containerMemoryGB**: Container memory in GB (default: 2)
          
          ### Post-Deployment
          
          After deployment, you can access your UniFi Controller at:
          - HTTPS: \`https://<container-fqdn>:8443\`
          - HTTP: \`http://<container-fqdn>:8080\`
          
          The FQDN and IP address are available in the deployment outputs.
          EOF
          
          # Create a parameters example
          cat > release-artifacts/main.parameters.example.json << EOF
          {
            "\$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "value": "westeurope"
              },
              "containerGroupName": {
                "value": "unifi-controller"
              },
              "storageAccountName": {
                "value": ""
              },
              "fileShareName": {
                "value": "unifi-controller"
              },
              "timeZone": {
                "value": "Europe/Amsterdam"
              },
              "fileShareSizeGB": {
                "value": 5
              },
              "containerMemoryGB": {
                "value": 2
              }
            }
          }
          EOF
          
          # Zip all artifacts
          cd release-artifacts
          zip -r ../unifi-azure-deploy-${{ steps.get_version.outputs.VERSION }}.zip .
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: UniFi on Azure ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          files: |
            release-artifacts/main.json
            release-artifacts/main.bicep
            release-artifacts/main.parameters.json
            release-artifacts/main.parameters.example.json
            release-artifacts/DEPLOYMENT_GUIDE.md
            unifi-azure-deploy-${{ steps.get_version.outputs.VERSION }}.zip
          body: |
            ## UniFi Controller on Azure Container Instances
            
            ### üöÄ Quick Deploy
            
            [![Deploy to Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Faadversteeg.github.io%2Fdeploy-to-azure%2Flatest%2Fmain.json)
            
            Or use Azure CLI:
            ```bash
            az deployment group create \
              --resource-group <your-rg> \
              --template-uri https://aadversteeg.github.io/deploy-to-azure/v${{ steps.get_version.outputs.VERSION }}/main.json \
              --parameters location=<your-location>
            ```
            
            ### üì¶ What's Included
            
            - ARM Template (`main.json`) - Ready to deploy
            - Bicep Template (`main.bicep`) - Source template
            - Parameters File (`main.parameters.json`) - Deployment parameters
            - Example Parameters (`main.parameters.example.json`) - Filled example
            - Deployment Guide (`DEPLOYMENT_GUIDE.md`) - Detailed instructions
            
            ### üîß Resources Created
            
            - Azure Container Instance running UniFi Controller v8.1
            - Azure Storage Account with File Share for persistent data
            - Public IP with DNS name
            
            ### üìã Requirements
            
            - Azure Subscription
            - Resource Group (or create new during deployment)
            
            ### üåê Deployment Page
            
            Visit our [deployment page](https://aadversteeg.github.io/deploy-to-azure/) for more options.
            
            ### üìù Changelog
            
            See commit history for detailed changes.
          generate_release_notes: true
          draft: false
          prerelease: false
